WhereSelect:

MethodCallExpression (NodeType = Call, Type = IQueryable<string>)
|_Method = Queryable.Select<Product, string>
|_Object = null
|_Arguments
  |_MethodCallExpression (NodeType = Call, Type = IQueryable<Product>)
  | |_Method = Queryable.Where<Product>
  | |_Object = null
  | |_Arguments
  |   |_MethodCallExpression (NodeType = Call, Type = IQueryable<Product>)
  |   | |_Method = ObjectQuery<Product>.MergeAs
  |   | |_Object
  |   | | |_ConstantExpression (NodeType = Constant, Type = ObjectQuery<Product>)
  |   | |  |_Value = new ObjectQuery<Product>(...)
  |   | |_Arguments
  |   |   |_ConstantExpression (NodeType = Constant, Type = MergeOption)
  |   |     |_Value = MergeOption.AppendOnly
  |   |_UnaryExpression (NodeType = Quote, Type = Expression<Func<Product, bool>>)
  |     |_Operand
  |       |_Expression<Func<Product, bool>> (NodeType = Lambda, Type = Func<Product, bool>)
  |         |_Parameters
  |         | |_ParameterExpression (NodeType = Parameter, Type = Product)
  |         |   |_Name = "product"
  |         |_Body
  |           |_MethodCallExpression (NodeType = Call, Type = bool)
  |             |_Method = string.StartsWith
  |             |_Object
  |             | |_PropertyExpression (NodeType = MemberAccess, Type = string)
  |             |   |_Expression
  |             |     |_ParameterExpression (NodeType = Parameter, Type = Product)
  |             |     | |_Name = "product"
  |             |     |_Member = "Name"
  |             |_Arguments
  |               |_ConstantExpression (NodeType = Constant, Type = string)
  |                 |_Value = "M"
  |_UnaryExpression (NodeType = Quote, Type = Expression<Func<Product, string>>)
    |_Operand
      |_Expression<Func<Product, string>> (NodeType = Lambda, Type = Func<Product, string>)
        |_Parameters
        | |_ParameterExpression (NodeType = Parameter, Type = Product)
        |   |_Name = "product"
        |_Body
          |_PropertyExpression (NodeType = MemberAccess, Type = string)
            |_Expression
            | |_ParameterExpression (NodeType = Parameter, Type = Product)
            |   |_Name = "product"
            |_Member = "Name"

SelectFirst:

MethodCallExpression (NodeType = Call, Type = string)
|_Method = Queryable.First<string>
|_Object = null
|_Arguments
  |_MethodCallExpression (NodeType = Call, Type = IQueryable<string>)
    |_Method = Queryable.Select<Product, string>
    |_Object = null
    |_Arguments
      |_MethodCallExpression (NodeType = Call, Type = IQueryable<Product>)
      | |_Method = ObjectQuery<Product>.MergeAs
      | |_Object
      | | |_ConstantExpression (NodeType = Constant, Type = ObjectQuery<Product>)
      | |  |_Value = new ObjectQuery<Product>(...)
      | |_Arguments
      |   |_ConstantExpression (NodeType = Constant, Type = MergeOption)
      |     |_Value = MergeOption.AppendOnly
      |_UnaryExpression (NodeType = Quote, Type = Expression<Func<Product, string>>)
       |_Operand
          |_Expression<Func<Product, string>> (NodeType = Lambda, Type = Func<Product, string>)
            |_Parameters
            | |_ParameterExpression (NodeType = Parameter, Type = Product)
            |   |_Name = "product"
            |_Body
              |_PropertyExpression (NodeType = MemberAccess, Type = string)
                |_Expression
                | |_ParameterExpression (NodeType = Parameter, Type = Product)
                |   |_Name = "product"
                |_Member = "Name"

WhereSelect:

DbQueryCommandTree
|_Parameters
|_Query
  |_DbProjectExpression (ExpressionKind = Project, ResultType = Collection(Row['Name' = Edm.String]))
    |_Input
    | |_DbExpressionBinding (VariableType = Product)
    |   |_VariableName = 'Filter1'
    |   |_Expression
    |     |_DbFilterExpression (ExpressionKind = Filter, ResultType = Product)
    |       |_Input
    |       | |_DbExpressionBinding (VariableType = Product)
    |       |   |_VariableName = 'Extent1'
    |       |   |_Expression
    |       |     |_DbScanExpression (ExpressionKind = Scan, ResultType = Collection(Product))
    |       |       |_Target = Products
    |       |_Predicate
    |         |_DbLikeExpression (ExpressionKind = Like, ResultType = Edm.Boolean)
    |           |_Argument
    |           | |_DbPropertyExpression (ExpressionKind = Property, ResultType = Edm.String)
    |           |   |_Property = Product.Name
    |           |   |_Instance
    |           |     |_DbVariableReferenceExpression (ExpressionKind = VariableReference, ResultType = Product)
    |           |       |_VariableName = 'Extent1'
    |           |_Pattern
    |             |_DbConstantExpression (ExpressionKind = Constant, ResultType = Edm.String)
    |               |_Value = 'M%'
    |_Projection
      |_DbNewInstanceExpression (ExpressionKind = NewInstance, ResultType = Row['Name' = Edm.String])
        |_Arguments
          |_DbPropertyExpression (ExpressionKind = Property, ResultType = Edm.String)
            |_Property = Product.Name
            |_Instance
              |_DbVariableReferenceExpression (ExpressionKind = VariableReference, ResultType = Product)
                |_VariableName = 'Filter1'

SelectFirst:

DbQueryCommandTree
|_Parameters
|_Query
  |_DbProjectExpression (ExpressionKind = Project, ResultType = Collection(Row['Name' = Edm.String]))
    |_Input
    | |_DbExpressionBinding (VariableType = Product)
    |   |_VariableName = 'Limit1'
    |   |_Expression
    |     |_DbLimitExpression (ExpressionKind = Limit, ResultType = Collection(Product))
    |       |_Argument
    |       | |_DbScanExpression (ExpressionKind = Scan, ResultType = Collection(Product))
    |       |   |_Target = Products
    |       |_Limit
    |         |_DbConstantExpression (ExpressionKind = Constant, ResultType = Edm.Int32)
    |           |_Value = 1
    |_Projection
      |_DbNewInstanceExpression (ExpressionKind = NewInstance, ResultType = Row['Name' = Edm.String])
        |_Arguments
          |_DbPropertyExpression (ExpressionKind = Property, ResultType = Edm.String)
            |_Property = Product.Name
            |_Instance
              |_DbVariableReferenceExpression (ExpressionKind = VariableReference, ResultType = Product)
                |_VariableName = 'Limit1'

WhereSelect:

DbQueryCommandTree
|_Parameters
|_Query : Collection{Record['Name'=Edm.String]}
  |_Project
    |_Input : 'Filter1'
    | |_Filter
    |   |_Input : 'Extent1'
    |   | |_Scan : CodeFirstDatabase.Product
    |   |_Predicate
    |     |_Like
    |       |_Var(Extent1).Name
    |       |_'M%'
    |       |_null
    |_Projection
      |_NewInstance : Record['Name'=Edm.String]
        |_Column : 'Name'
          |_Var(Filter1).Name

SelectFirst:

DbQueryCommandTree
|_Parameters
|_Query : Collection{Record['Name'=Edm.String]}
  |_Project
    |_Input : 'Limit1'
    | |_Limit
    |   |_Scan : CodeFirstDatabase.Product
    |   |_1
    |_Projection
      |_NewInstance : Record['Name'=Edm.String]
        |_Column : 'Name'
          |_Var(Limit1).Name

string.IsNullOrEmpty:

MethodCallExpression (NodeType = Call, Type = bool)
|_Method = string.IsNullOrEmpty
|_Object = null
|_Arguments
  |_ParameterExpression (NodeType = Parameter, Type = string)
    |_Name = "name"

string.IsNullOrEmpty:

DbComparisonExpression (ExpressionKind = Equals, ResultType = Edm.Boolean)
|_Left
| |_DbFunctionExpression (ExpressionKind = Function, ResultType = Edm.Int32)
|   |_Function = Edm.Length
|    |_Arguments
|     |_DbVariableReferenceExpression (ExpressionKind = VariableReference, ResultType = Edm.String)
|       |_VariableName = 'LQ2'
|_Right
    |_DbConstantExpression (ExpressionKind = Constant, ResultType = Edm.Int32)
    |_Value = 0
